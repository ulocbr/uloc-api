<?php

namespace Uloc\ApiBundle\Repository\Chat;

/**
 * ChatMensagemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChatMensagemRepository extends \Doctrine\ORM\EntityRepository
{

    public function findTransactionalMessages($u1, $u2, $onlyNotReads)
    {
        $preSQL = '';
        if($onlyNotReads){
            $preSQL = ' and m.lido IS NULL and m.usuario != :u1 ';
        }
        $sql = '
        SELECT m FROM UlocAppBundle:Chat\ChatMensagem m WHERE ((m.usuario = :u1 and m.destinatario = :u2) or (m.usuario = :u2 and m.destinatario = :u1)) ' . $preSQL . '  
        ORDER BY m.data ASC
        ';
        $query = $this->getEntityManager()->createQuery($sql)
            ->setParameter('u1', $u1)
            ->setParameter('u2', $u2);

        $result = $query->execute();

        // Update to read
        //$newSql = str_replace('SELECT m FROM', 'SELECT id FROM', $sql);
        $newSql = "UPDATE UlocAppBundle:Chat\ChatMensagem m SET m.lido = :now WHERE m.destinatario = :u1 and m.usuario = :u2 and m.lido IS NULL";
        $queryUpdate = $this->getEntityManager()->createQuery($newSql)
            ->setParameter('now', (new \DateTime('now'))->format('Y-m-d H:i:s'))
            ->setParameter('u1', $u1)
            ->setParameter('u2', $u2)
            ->execute();

        return $result;
    }

    public function findNotReadedMessagesCount($user)
    {
        $query = $this->getEntityManager()->createQuery('
        SELECT count(1) total FROM UlocAppBundle:Chat\ChatMensagem m WHERE m.destinatario = :user and m.lido IS NULL
        ')
            ->setParameter('user', $user);

        return $query->getSingleScalarResult();
    }

    public function findNotReadedMessages($user)
    {
        $query = $this->getEntityManager()->createQuery('
        SELECT count(m.id) naoLidas, IDENTITY(m.usuario) usuario, IDENTITY(m.destinatario) destinatario FROM UlocAppBundle:Chat\ChatMensagem m WHERE m.destinatario = :user and m.lido IS NULL GROUP BY usuario
        ')
            ->setParameter('user', $user);

        return $query->getResult();
    }

}
